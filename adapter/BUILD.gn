# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

## Build libwmadapter.so {{{
config("libwmadapter_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//utils/system/safwk/native/include",
    "//foundation/windowmanager/wmserver/include",
    "//foundation/windowmanager/interfaces/innerkits/wm",
    "//foundation/windowmanager/wm/include",
    "//foundation/windowmanager/utils/include",
    "//foundation/graphic/standard/interfaces/innerkits/wmclient",
    "//foundation/graphic/standard/interfaces/innerkits/common",
    "//foundation/graphic/standard/interfaces/innerkits/surface",

    # for abilityContext
    "//foundation/aafwk/standard/frameworks/kits/ability/ability_runtime/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//third_party/node/deps/icu-small/source/common",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//third_party/jsoncpp/include",
    "//third_party/json/include",
  ]
}

config("libwmadapter_public_config") {
  include_dirs = [
    "//foundation/graphic/standard/interfaces/innerkits/wmclient",
    "//foundation/windowmanager/interfaces/innerkits/wm",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/proxy/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//foundation/multimodalinput/input/common/include",
  ]
}

ohos_shared_library("libwmadapter") {
  sources = [ "src/adapter.cpp" ]

  configs = [ ":libwmadapter_config" ]

  public_configs = [ ":libwmadapter_public_config" ]

  deps = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/graphic/standard:libwmclient",
    "//utils/native/base:utils",

    # RSSurface
    "//foundation/graphic/standard/rosen/modules/render_service_base:librender_service_base",
    "//foundation/graphic/standard/rosen/modules/render_service_client:librender_service_client",

    # native value
    "//foundation/ace/napi:ace_napi",

    # ace
    "//foundation/ace/ace_engine/interfaces/innerkits/ace:ace_uicontent",
  ]

  public_deps = [
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/graphic/standard:libsurface",
    "//foundation/graphic/standard/utils:promise",
    "//utils/native/base:utils",

    # IMS
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-client",
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-common",
  ]

  part_name = "window_manager"
  subsystem_name = "window"
}
