# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
module_out_path = "window_manager/wms"

group("unittest") {
  testonly = true

  deps = [ ":wms_window_inner_manager_test" ]
}

## UnitTest wms_window_inner_manager_test {{{
ohos_unittest("wms_window_inner_manager_test") {
  module_out_path = module_out_path

  sources = [ "window_inner_manager_test.cpp" ]

  deps = [ ":wms_unittest_common" ]
}

## UnitTest wms_window_inner_manager_test }}}

## Build wms_unittest_common.a {{{
config("wms_unittest_common_public_config") {
  include_dirs = [
    "//foundation/windowmanager/wm/include",
    "//foundation/windowmanager/wm/test/unittest",
    "//foundation/windowmanager/wmserver/include",
    "//foundation/windowmanager/wmserver/include/window_snapshot",
    "//foundation/windowmanager/interfaces/innerkits/wm",
    "//foundation/windowmanager/utils/include",
    "//utils/native/base/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//third_party/googletest/googlemock/include",

    # for abilityContext
    "//foundation/aafwk/standard/frameworks/kits/ability/ability_runtime/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/context",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//third_party/node/deps/icu-small/source/common",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//third_party/jsoncpp/include",
    "//third_party/json/include",

    # abilityContext end
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

ohos_static_library("wms_unittest_common") {
  visibility = [ ":*" ]
  testonly = true

  public_configs = [ ":wms_unittest_common_public_config" ]

  public_deps = [
    "//foundation/ace/ace_engine/interfaces/innerkits/ace:ace_uicontent",

    # todo need delete it for abilitycontext
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//foundation/ace/ace_engine/build/external_config/flutter/skia:ace_skia_ohos",
    "//foundation/ace/napi:ace_napi",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/graphic/standard/rosen/modules/render_service_client:librender_service_client",
    "//foundation/windowmanager/dm:libdm",
    "//foundation/windowmanager/dmserver:libdms",
    "//foundation/windowmanager/utils:libwmutil",
    "//foundation/windowmanager/wm:libwm",
    "//foundation/windowmanager/wmserver:libwms",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = [ "ability_runtime:ability_context_native" ]
  subsystem_name = "window"
  part_name = "window_manager"
}
## Build wms_unittest_common.a }}}
