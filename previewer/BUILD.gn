# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_shared_library("previewer_shared") {
  libs = []

  sources = [
    # js
    "../../../../commonlibrary/c_utils/base/src/refbase.cpp",
    "../../../ability/ability_runtime/frameworks/native/runtime/js_runtime_utils.cpp",
    "../interfaces/kits/napi/window_runtime/window_napi/js_window.cpp",
    "../interfaces/kits/napi/window_runtime/window_napi/js_window_utils.cpp",
    "../interfaces/kits/napi/window_runtime/window_stage_napi/js_window_stage.cpp",
    "../utils/src/window_property.cpp",
    "../utils/src/window_transition_info.cpp",
    "../utils/src/wm_math.cpp",
    "../wm/src/input_transfer_station.cpp",
    "../wm/src/vsync_station.cpp",
    "../wm/src/window.cpp",
    "../wm/src/window_input_channel.cpp",
    "../wm/src/window_option.cpp",
    "src/window_impl.cpp",
    "src/window_scene.cpp",

    # mock
    "mock/js_transition_controller.cpp",
    "mock/js_window_register_manager.cpp",
    "mock/parcel.cpp",
    "mock/pixel_map_napi.cpp",
    "mock/ui/rs_node.cpp",
  ]

  include_dirs = [
    "./",  # 避免冲突的mock目录
    "mock/",  # mock目录
    "mock/ui/",
    "mock/transaction/",
    "include/",
    "../wm/include/",
    "../wm/include/zidl/",
    "../utils/include/",
    "../interfaces/innerkits/wm/",
    "../interfaces/innerkits/dm/",
    "../interfaces/kits/napi/window_runtime/window_napi/",
    "../interfaces/kits/napi/window_runtime/window_stage_napi/",
    "../../../ability/ability_runtime/interfaces/inner_api/runtime/include/",
    "../../../../commonlibrary/c_utils/base/include/",
  ]

  deps = [
    "//foundation/arkui/napi:ace_napi",
    "//foundation/arkui/napi:ace_napi_ark",
  ]

  cflags_cc = [ "-DWINDOW_PREVIEW" ]
  cflags = [ "-std=c++11" ]
  part_name = "window_manager"
  subsystem_name = "window"
}

ohos_copy("copy_previewer_library") {
  if (host_os != "mac") {
    suffix = ".dll"
    shared_library_path = get_label_info(":previewer_shared", "root_out_dir") +
                          "/window/window_manager/libpreviewer_shared" + suffix
    deps = [ ":previewer_shared" ]
    sources = [ shared_library_path ]
    outputs = [ target_out_dir + "/previewer/common/bin/libpreviewer_shared" +
                suffix ]
    module_source_dir = target_out_dir + "/previewer/common/bin/"
    module_install_name = ""
  }
}
