# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../windowmanager_aafwk.gni")

group("unittest") {
  testonly = true
  deps = [
    ":extension_data_handler_test",
    ":ws_extension_session_manager_test",
    ":ws_extension_session_test",
    ":ws_scene_session_manager_extension_test",
  ]
}

module_out_path = "window_manager/window_manager/window_scene/ui_extension"
ws_unittest_common = "../:ws_unittest_common"

test_external_deps = [
  "ability_base:configuration",
  "ability_runtime:ability_manager",
  "ability_runtime:app_manager",
  "ability_runtime:session_handler",
  "accessibility:accessibility_common",
  "accessibility:accessibility_interface",
  "access_token:libaccesstoken_sdk",
  "bundle_framework:libappexecfwk_common",
  "c_utils:utils",
  "ffrt:libffrt",
  "googletest:gmock",
  "googletest:gtest",
  "googletest:gtest_main",
  "graphic_2d:librender_service_base",
  "graphic_2d:librender_service_client",
  "graphic_2d:window_animation",
  "hilog:libhilog",
  "image_framework:image_native",
  "input:libmmi-client",
  "input:libmmi-napi",
  "ipc:ipc_single",
  "libxml2:libxml2",
  "napi:ace_napi",
  "safwk:system_ability_fwk",
]

ohos_unittest("extension_data_handler_test") {
  module_out_path = module_out_path
  sources = [ "data_handler/extension_data_handler_test.cpp" ]
  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]
  deps = [ ws_unittest_common ]
  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
  ]
}

ohos_unittest("ws_extension_session_manager_test") {
  module_out_path = module_out_path

  sources = [ "extension_session_manager_test.cpp" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-napi",
  ]
}

ohos_unittest("ws_extension_session_test") {
  module_out_path = module_out_path

  sources = [ "extension_session_test.cpp" ]
  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]

  deps = [ ws_unittest_common ]
  defines = [ "ACCESSIBILITY_MOCK" ]

  external_deps = [
    "ability_base:session_info",
    "ability_base:want",
    "accessibility:accessibility_common",
    "accessibility:accessibility_interface",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-napi",
  ]
}

ohos_unittest("ws_scene_session_manager_extension_test") {
  module_out_path = module_out_path
  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock",
    "${window_base_path}/window_scene/test/unittest/ui_extension/mock",
  ]

  sources = [
    "scene_session_manager_extension_test.cpp",
    "mock/mock_uiext_session_permission.cpp",
    "../../mock/mock_ability_manager_client.cpp",
  ]

  defines = [
    "ENABLE_MOCK_IS_SYSTEM_CALLING",
    "ENABLE_MOCK_VERIFY_CALLING_PERMISSION",
    "ENABLE_MOCK_START_BY_HDCD",
  ]

  deps = [ ws_unittest_common ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
  ]
}
