# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/window/window_manager/windowmanager_aafwk.gni")

module_out_path = "window_manager/window_manager/window_scene/layout"
ws_unittest_common = "../:ws_unittest_common"

ohos_unittest("ws_layout_test") {
  module_out_path = module_out_path

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  sources = [
    "keyboard_session_layout_test.cpp",
    "scb_system_session_layout_test.cpp",
    "scene_session_layout_test.cpp",
    "scene_session_manager_layout_test.cpp",
    "session_layout_test.cpp",
    "session_stage_proxy_layout_test.cpp",
    "session_stub_layout_test.cpp",
  ]

  deps = [ ws_unittest_common ]

external_deps = [
  "ability_base:base",
  "ability_base:configuration",
  "ability_base:session_info",
  "ability_base:want",
  "ability_runtime:ability_context_native",
  "ability_runtime:ability_manager",
  "ability_runtime:app_manager",
  "ability_runtime:mission_info",
  "ability_runtime:process_options",
  "ability_runtime:session_handler",
  "accessibility:accessibility_common",
  "accessibility:accessibility_interface",
  "bundle_framework:appexecfwk_base",
  "bundle_framework:appexecfwk_core",
  "bundle_framework:libappexecfwk_common",
  "c_utils:utils",
  "eventhandler:libeventhandler",
  "ffrt:libffrt",
  "googletest:gmock",
  "googletest:gtest",
  "googletest:gtest_main",
  "graphic_2d:librender_service_base",
  "graphic_2d:librender_service_client",
  "graphic_2d:window_animation",
  "hilog:libhilog",
  "image_framework:image_native",
  "input:libmmi-client",
  "input:libmmi-napi",
  "ipc:ipc_single",
  "libxml2:libxml2",
  "napi:ace_napi",
]

  public_external_deps = [ "accessibility:accessibility_interface" ]
}
